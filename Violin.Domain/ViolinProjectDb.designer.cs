#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Violin.Domain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AlexandraViolin")]
	public partial class LessonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLesson(Lesson instance);
    partial void UpdateLesson(Lesson instance);
    partial void DeleteLesson(Lesson instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMethod(Method instance);
    partial void UpdateMethod(Method instance);
    partial void DeleteMethod(Method instance);
    partial void InsertPlan(Plan instance);
    partial void UpdatePlan(Plan instance);
    partial void DeletePlan(Plan instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    #endregion
		
		public LessonDataContext() : 
				base(global::Violin.Domain.Properties.Settings.Default.AlexandraViolinConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LessonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LessonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LessonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LessonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Lesson> Lesson
		{
			get
			{
				return this.GetTable<Lesson>();
			}
		}
		
		public System.Data.Linq.Table<Material> Material
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Method> Method
		{
			get
			{
				return this.GetTable<Method>();
			}
		}
		
		public System.Data.Linq.Table<Plan> Plan
		{
			get
			{
				return this.GetTable<Plan>();
			}
		}
		
		public System.Data.Linq.Table<Video> Video
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<Account> Account
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photo
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lesson")]
	public partial class Lesson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private int _sort;
		
		private System.DateTime _inputDate;
		
		private EntitySet<Material> _Material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    #endregion
		
		public Lesson()
		{
			this._Material = new EntitySet<Material>(new Action<Material>(this.attach_Material), new Action<Material>(this.detach_Material));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Material", Storage="_Material", ThisKey="ID", OtherKey="LessonID")]
		public EntitySet<Material> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = this;
		}
		
		private void detach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LessonID;
		
		private int _VideoID;
		
		private System.DateTime _inputDate;
		
		private EntitySet<Plan> _Plan;
		
		private EntityRef<Lesson> _Lesson;
		
		private EntityRef<Video> _Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLessonIDChanging(int value);
    partial void OnLessonIDChanged();
    partial void OnVideoIDChanging(int value);
    partial void OnVideoIDChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    #endregion
		
		public Material()
		{
			this._Plan = new EntitySet<Plan>(new Action<Plan>(this.attach_Plan), new Action<Plan>(this.detach_Plan));
			this._Lesson = default(EntityRef<Lesson>);
			this._Video = default(EntityRef<Video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonID", DbType="Int NOT NULL")]
		public int LessonID
		{
			get
			{
				return this._LessonID;
			}
			set
			{
				if ((this._LessonID != value))
				{
					if (this._Lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonIDChanging(value);
					this.SendPropertyChanging();
					this._LessonID = value;
					this.SendPropertyChanged("LessonID");
					this.OnLessonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoID", DbType="Int NOT NULL")]
		public int VideoID
		{
			get
			{
				return this._VideoID;
			}
			set
			{
				if ((this._VideoID != value))
				{
					if (this._Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIDChanging(value);
					this.SendPropertyChanging();
					this._VideoID = value;
					this.SendPropertyChanged("VideoID");
					this.OnVideoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Plan", Storage="_Plan", ThisKey="ID", OtherKey="MaterialID")]
		public EntitySet<Plan> Plan
		{
			get
			{
				return this._Plan;
			}
			set
			{
				this._Plan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Material", Storage="_Lesson", ThisKey="LessonID", OtherKey="ID", IsForeignKey=true)]
		public Lesson Lesson
		{
			get
			{
				return this._Lesson.Entity;
			}
			set
			{
				Lesson previousValue = this._Lesson.Entity;
				if (((previousValue != value) 
							|| (this._Lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lesson.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Lesson.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._LessonID = value.ID;
					}
					else
					{
						this._LessonID = default(int);
					}
					this.SendPropertyChanged("Lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Material", Storage="_Video", ThisKey="VideoID", OtherKey="ID", IsForeignKey=true)]
		public Video Video
		{
			get
			{
				return this._Video.Entity;
			}
			set
			{
				Video previousValue = this._Video.Entity;
				if (((previousValue != value) 
							|| (this._Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Video.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Video.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._VideoID = value.ID;
					}
					else
					{
						this._VideoID = default(int);
					}
					this.SendPropertyChanged("Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Plan(Plan entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_Plan(Plan entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Method")]
	public partial class Method : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _name;
		
		private int _sort;
		
		private System.DateTime _inputDate;
		
		private EntitySet<Method> _Method2;
		
		private EntitySet<Plan> _Plan;
		
		private EntityRef<Method> _Method1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    #endregion
		
		public Method()
		{
			this._Method2 = new EntitySet<Method>(new Action<Method>(this.attach_Method2), new Action<Method>(this.detach_Method2));
			this._Plan = new EntitySet<Plan>(new Action<Plan>(this.attach_Plan), new Action<Plan>(this.detach_Plan));
			this._Method1 = default(EntityRef<Method>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Method1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Method_Method", Storage="_Method2", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Method> Method2
		{
			get
			{
				return this._Method2;
			}
			set
			{
				this._Method2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Method_Plan", Storage="_Plan", ThisKey="ID", OtherKey="MethodID")]
		public EntitySet<Plan> Plan
		{
			get
			{
				return this._Plan;
			}
			set
			{
				this._Plan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Method_Method", Storage="_Method1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Method Method1
		{
			get
			{
				return this._Method1.Entity;
			}
			set
			{
				Method previousValue = this._Method1.Entity;
				if (((previousValue != value) 
							|| (this._Method1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Method1.Entity = null;
						previousValue.Method2.Remove(this);
					}
					this._Method1.Entity = value;
					if ((value != null))
					{
						value.Method2.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Method1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Method2(Method entity)
		{
			this.SendPropertyChanging();
			entity.Method1 = this;
		}
		
		private void detach_Method2(Method entity)
		{
			this.SendPropertyChanging();
			entity.Method1 = null;
		}
		
		private void attach_Plan(Plan entity)
		{
			this.SendPropertyChanging();
			entity.Method = this;
		}
		
		private void detach_Plan(Plan entity)
		{
			this.SendPropertyChanging();
			entity.Method = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Plan]")]
	public partial class Plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private int _MaterialID;
		
		private int _MethodID;
		
		private int _sort;
		
		private System.DateTime _inputDate;
		
		private EntityRef<Material> _Material;
		
		private EntityRef<Method> _Method;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnMaterialIDChanging(int value);
    partial void OnMaterialIDChanged();
    partial void OnMethodIDChanging(int value);
    partial void OnMethodIDChanged();
    partial void OnsortChanging(int value);
    partial void OnsortChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    #endregion
		
		public Plan()
		{
			this._Material = default(EntityRef<Material>);
			this._Method = default(EntityRef<Method>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="Int NOT NULL")]
		public int MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodID", DbType="Int NOT NULL")]
		public int MethodID
		{
			get
			{
				return this._MethodID;
			}
			set
			{
				if ((this._MethodID != value))
				{
					if (this._Method.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMethodIDChanging(value);
					this.SendPropertyChanging();
					this._MethodID = value;
					this.SendPropertyChanged("MethodID");
					this.OnMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int NOT NULL")]
		public int sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Plan", Storage="_Material", ThisKey="MaterialID", OtherKey="ID", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.Plan.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.Plan.Add(this);
						this._MaterialID = value.ID;
					}
					else
					{
						this._MaterialID = default(int);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Method_Plan", Storage="_Method", ThisKey="MethodID", OtherKey="ID", IsForeignKey=true)]
		public Method Method
		{
			get
			{
				return this._Method.Entity;
			}
			set
			{
				Method previousValue = this._Method.Entity;
				if (((previousValue != value) 
							|| (this._Method.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Method.Entity = null;
						previousValue.Plan.Remove(this);
					}
					this._Method.Entity = value;
					if ((value != null))
					{
						value.Plan.Add(this);
						this._MethodID = value.ID;
					}
					else
					{
						this._MethodID = default(int);
					}
					this.SendPropertyChanged("Method");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _path;
		
		private string _type;
		
		private System.Nullable<System.TimeSpan> _movieTime;
		
		private System.DateTime _inputDate;
		
		private EntitySet<Material> _Material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnmovieTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnmovieTimeChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    #endregion
		
		public Video()
		{
			this._Material = new EntitySet<Material>(new Action<Material>(this.attach_Material), new Action<Material>(this.detach_Material));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> movieTime
		{
			get
			{
				return this._movieTime;
			}
			set
			{
				if ((this._movieTime != value))
				{
					this.OnmovieTimeChanging(value);
					this.SendPropertyChanging();
					this._movieTime = value;
					this.SendPropertyChanged("movieTime");
					this.OnmovieTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Material", Storage="_Material", ThisKey="ID", OtherKey="VideoID")]
		public EntitySet<Material> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Video = this;
		}
		
		private void detach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Video = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _email;
		
		private string _password_hash;
		
		private string _salt;
		
		private System.DateTime _inputDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onpassword_hashChanging(string value);
    partial void Onpassword_hashChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_hash", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string password_hash
		{
			get
			{
				return this._password_hash;
			}
			set
			{
				if ((this._password_hash != value))
				{
					this.Onpassword_hashChanging(value);
					this.SendPropertyChanging();
					this._password_hash = value;
					this.SendPropertyChanged("password_hash");
					this.Onpassword_hashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NVarChar(36) NOT NULL", CanBeNull=false)]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photo")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _path;
		
		private string _type;
		
		private System.Nullable<System.TimeSpan> _movieTime;
		
		private string _description;
		
		private string _album;
		
		private string _pathm;
		
		private string _sizem;
		
		private string _size;
		
		private System.Nullable<int> _sort;
		
		private string _alt;
		
		private string _eventDay;
		
		private string _eventMonthYear;
		
		private string _eventDesc;
		
		private string _eventTime;
		
		private System.DateTime _dateConcert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnmovieTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnmovieTimeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnalbumChanging(string value);
    partial void OnalbumChanged();
    partial void OnpathmChanging(string value);
    partial void OnpathmChanged();
    partial void OnsizemChanging(string value);
    partial void OnsizemChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnsortChanging(System.Nullable<int> value);
    partial void OnsortChanged();
    partial void OnaltChanging(string value);
    partial void OnaltChanged();
    partial void OneventDayChanging(string value);
    partial void OneventDayChanged();
    partial void OneventMonthYearChanging(string value);
    partial void OneventMonthYearChanged();
    partial void OneventDescChanging(string value);
    partial void OneventDescChanged();
    partial void OneventTimeChanging(string value);
    partial void OneventTimeChanged();
    partial void OndateConcertChanging(System.DateTime value);
    partial void OndateConcertChanged();
    #endregion
		
		public Photo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(250)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(5)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> movieTime
		{
			get
			{
				return this._movieTime;
			}
			set
			{
				if ((this._movieTime != value))
				{
					this.OnmovieTimeChanging(value);
					this.SendPropertyChanging();
					this._movieTime = value;
					this.SendPropertyChanged("movieTime");
					this.OnmovieTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album", DbType="NVarChar(100)")]
		public string album
		{
			get
			{
				return this._album;
			}
			set
			{
				if ((this._album != value))
				{
					this.OnalbumChanging(value);
					this.SendPropertyChanging();
					this._album = value;
					this.SendPropertyChanged("album");
					this.OnalbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pathm", DbType="NVarChar(256)")]
		public string pathm
		{
			get
			{
				return this._pathm;
			}
			set
			{
				if ((this._pathm != value))
				{
					this.OnpathmChanging(value);
					this.SendPropertyChanging();
					this._pathm = value;
					this.SendPropertyChanged("pathm");
					this.OnpathmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizem", DbType="VarChar(9)")]
		public string sizem
		{
			get
			{
				return this._sizem;
			}
			set
			{
				if ((this._sizem != value))
				{
					this.OnsizemChanging(value);
					this.SendPropertyChanging();
					this._sizem = value;
					this.SendPropertyChanged("sizem");
					this.OnsizemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(9)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int")]
		public System.Nullable<int> sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt", DbType="NVarChar(255)")]
		public string alt
		{
			get
			{
				return this._alt;
			}
			set
			{
				if ((this._alt != value))
				{
					this.OnaltChanging(value);
					this.SendPropertyChanging();
					this._alt = value;
					this.SendPropertyChanged("alt");
					this.OnaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventDay", DbType="NVarChar(20)")]
		public string eventDay
		{
			get
			{
				return this._eventDay;
			}
			set
			{
				if ((this._eventDay != value))
				{
					this.OneventDayChanging(value);
					this.SendPropertyChanging();
					this._eventDay = value;
					this.SendPropertyChanged("eventDay");
					this.OneventDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventMonthYear", DbType="NVarChar(10)")]
		public string eventMonthYear
		{
			get
			{
				return this._eventMonthYear;
			}
			set
			{
				if ((this._eventMonthYear != value))
				{
					this.OneventMonthYearChanging(value);
					this.SendPropertyChanging();
					this._eventMonthYear = value;
					this.SendPropertyChanged("eventMonthYear");
					this.OneventMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventDesc", DbType="NVarChar(150)")]
		public string eventDesc
		{
			get
			{
				return this._eventDesc;
			}
			set
			{
				if ((this._eventDesc != value))
				{
					this.OneventDescChanging(value);
					this.SendPropertyChanging();
					this._eventDesc = value;
					this.SendPropertyChanged("eventDesc");
					this.OneventDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventTime", DbType="NVarChar(10)")]
		public string eventTime
		{
			get
			{
				return this._eventTime;
			}
			set
			{
				if ((this._eventTime != value))
				{
					this.OneventTimeChanging(value);
					this.SendPropertyChanging();
					this._eventTime = value;
					this.SendPropertyChanged("eventTime");
					this.OneventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateConcert", DbType="DateTime NOT NULL")]
		public System.DateTime dateConcert
		{
			get
			{
				return this._dateConcert;
			}
			set
			{
				if ((this._dateConcert != value))
				{
					this.OndateConcertChanging(value);
					this.SendPropertyChanging();
					this._dateConcert = value;
					this.SendPropertyChanged("dateConcert");
					this.OndateConcertChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
